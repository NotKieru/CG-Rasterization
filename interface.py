# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'teste1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets

from src.InterfaceEvents import draw_line, draw_polygon
from src.Lines import raster_line, plot_image
from src.Polygons import combine_matrices


#QtCore.QRect(x, y, width, height)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        ################################################################################################################

        # Definição das propriedades da janela principal.
        MainWindow.setObjectName("Computação gráfica")
        MainWindow.resize(1180, 250)

        # Cria o container principal
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)

        ################################################################################################################

        # Adiciona a label de resoluções
        self.resolution_label = QtWidgets.QLabel(self.centralwidget)
        self.resolution_label.setGeometry(QtCore.QRect(28, 20, 171, 31))
        self.resolution_label.setTextFormat(QtCore.Qt.RichText)
        self.resolution_label.setObjectName("label_2")

        # Adição do dropdown de opções de resolução.
        self.resolution_dropdown = QtWidgets.QComboBox(self.centralwidget)
        self.resolution_dropdown.setGeometry(QtCore.QRect(28, 50, 311, 31))
        self.resolution_dropdown.setObjectName("comboBox_2")
        self.resolution_dropdown.addItem("100x100")
        self.resolution_dropdown.addItem("300x300")
        self.resolution_dropdown.addItem("800x600")
        self.resolution_dropdown.addItem("1920x1080")

        ################################################################################################################

        # Adiciona a label de tipo de rasterização
        self.raster_type_label = QtWidgets.QLabel(self.centralwidget)
        self.raster_type_label.setGeometry(QtCore.QRect(428, 10, 1071, 49))
        self.raster_type_label.setTextFormat(QtCore.Qt.RichText)
        self.raster_type_label.setObjectName("label")

        # Adicionando botão para inserção de operação RETA
        self.line_operation_button = QtWidgets.QPushButton(self.centralwidget)
        self.line_operation_button.setGeometry(QtCore.QRect(428, 50, 50, 30))
        self.line_operation_button.setObjectName("lineButton")
        self.line_operation_button.clicked.connect(self.on_line_button_clicked)

        # Adicionando botão para inserção de operação POLÍGONO
        self.polygon_operation_button = QtWidgets.QPushButton(self.centralwidget)
        self.polygon_operation_button.setGeometry(QtCore.QRect(481, 50, 75, 30))
        self.polygon_operation_button.setObjectName("polygonButton")
        self.polygon_operation_button.clicked.connect(self.on_polygon_button_clicked)

        # Adicionando botão para inserção de operação CURVA
        self.curve_operation_button = QtWidgets.QPushButton(self.centralwidget)
        self.curve_operation_button.setGeometry(QtCore.QRect(558, 50, 50, 30))
        self.curve_operation_button.setObjectName("curveButton")
        self.curve_operation_button.clicked.connect(self.on_curve_button_clicked)

        ################################################################################################################

        # Adiciona a label de adição de coordenada
        self.coordinate_label = QtWidgets.QLabel(self.centralwidget)
        self.coordinate_label.setGeometry(QtCore.QRect(848, 10, 1071, 49))
        self.coordinate_label.setTextFormat(QtCore.Qt.RichText)
        self.coordinate_label.setObjectName("coordinateLabel")

        # Adição do campo de texto para inserção de coordenada
        self.coordinate_text_edit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.coordinate_text_edit.setGeometry(QtCore.QRect(848, 50, 160, 31))
        self.coordinate_text_edit.setObjectName("plainTextEdit")
        self.coordinate_text_edit.setPlaceholderText("X Y")

        # Adicionando botão para inserção de coordenada
        self.coordinate_button = QtWidgets.QPushButton(self.centralwidget)
        self.coordinate_button.setGeometry(QtCore.QRect(1009, 50, 135, 32))
        self.coordinate_button.setObjectName("coordinateButton")
        self.coordinate_button.clicked.connect(self.on_coordinate_button_clicked)

        ################################################################################################################

        # Adiciona label de input
        self.input_label = QtWidgets.QLabel(self.centralwidget)
        self.input_label.setGeometry(QtCore.QRect(28, 90, 171, 31))
        self.input_label.setTextFormat(QtCore.Qt.RichText)
        self.input_label.setObjectName("label_3")

        # Adição do campo de texto para inserção do input.
        self.input_text_edit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.input_text_edit.setGeometry(QtCore.QRect(28, 125, 1121, 31))
        self.input_text_edit.setObjectName("plainTextEdit")
        self.input_text_edit.setPlaceholderText("/Reta=0 0;99 99")

        # Adição do botão de carregamento
        self.input_button = QtWidgets.QPushButton(self.centralwidget)
        self.input_button.setGeometry(QtCore.QRect(28, 165, 1121, 32))
        self.input_button.setObjectName("loadImageButton")
        self.input_button.clicked.connect(self.on_continue_button_clicked)

        # Adição do botão de limpar input
        self.clean_button = QtWidgets.QPushButton(self.centralwidget)
        self.clean_button.setGeometry(QtCore.QRect(28, 205, 1121, 32))
        self.clean_button.setObjectName("cleanButton")
        self.clean_button.clicked.connect(self.on_clear_input_button_clicked)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

        self.input_button.setText(_translate("MainWindow", "Carregar imagem"))
        self.clean_button.setText(_translate("MainWindow", "Limpar input"))
        self.coordinate_button.setText(_translate("MainWindow", "Adicionar coordenada"))

        self.line_operation_button.setText(_translate("MainWindow", "Reta"))
        self.polygon_operation_button.setText(_translate("MainWindow", "Polígono"))
        self.curve_operation_button.setText(_translate("MainWindow", "Curva"))

        self.resolution_label.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Resolução</span></p></body></html>"))
        self.input_label.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Input</span></p></body></html>"))
        self.raster_type_label.setText(_translate("MainWindow",
                                                  "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Adicionar tipo de rasterização:</span></p></body></html>"))
        self.coordinate_label.setText(_translate("MainWindow",
                                                  "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Adicionar coordenada:</span></p></body></html>"))

    # Evento de clique no botão.
    def on_continue_button_clicked(self):
        self.resolution = self.resolution_dropdown.currentText()
        self.input = self.input_text_edit.toPlainText()
        self.input = self.input.split("/")

        inputImages = []

        for element in self.input:
            try:
                operation, coordinates = element.split("=")

                # Caso seja um evento de rasterizar reta.
                if operation == "Reta":
                    inputImages.append(draw_line(self.resolution, coordinates.split(";")[:-1]))

                # Caso seja um evento de rasterizar polígono.
                elif operation == "Polígono":
                    resultImages = draw_polygon(self.resolution, coordinates.split(";")[:-1])

                    for resultImage in resultImages:
                        inputImages.append(resultImage)

                # Caso seja um evento de rasterizar curva.
                else:
                    print('Integrate this later.')
            except:
                print("X")

        combined_operations_image = combine_matrices(inputImages)

        # Exibe a imagem final
        plot_image(combined_operations_image, 'Resultado', int(self.resolution.split("x")[0]), int(self.resolution.split("x")[1]))

    def on_line_button_clicked(self):
        self.input_text_edit.insertPlainText("/Reta=")

    def on_polygon_button_clicked(self):
        self.input_text_edit.insertPlainText("/Polígono=")

    def on_curve_button_clicked(self):
        self.input_text_edit.insertPlainText("/Curva=")

    def on_coordinate_button_clicked(self):
        self.input_text_edit.insertPlainText(f'{self.coordinate_text_edit.toPlainText()};')
        self.coordinate_text_edit.clear()

    def on_clear_input_button_clicked(self):
        self.input_text_edit.clear()

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
